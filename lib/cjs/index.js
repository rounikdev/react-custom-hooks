"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("react");const r=r=>{e.useEffect((()=>{r()}),[])},t=(r,t)=>{const n=e.useRef(!1);e.useEffect((()=>{n.current?r():n.current=!0}),t)},n=r=>{const t=e.useRef(r);return e.useEffect((()=>{t.current=r}),[r]),t},u=r=>{const t=n(r);e.useEffect((()=>t.current),[])};class s{}s.deepClone=e=>JSON.parse(JSON.stringify(e)),s.clearRAFTimeout=e=>{e&&e.id&&cancelAnimationFrame(e.id)},s.debounceRAF=(e,r)=>{const t={id:null};return(...n)=>{if("function"!=typeof e||"number"!=typeof r)return;const u=performance.now(),c=o=>{o-u<r?(s.clearRAFTimeout(t),t.id=requestAnimationFrame(c)):(s.clearRAFTimeout(t),e(...n))};s.clearRAFTimeout(t),t.id=requestAnimationFrame(c)}},s.setRAFTimeout=(e,r)=>{const t={id:null};if("function"!=typeof e||"number"!=typeof r)return t;const n=performance.now(),u=c=>{c-n<r?(s.clearRAFTimeout(t),t.id=requestAnimationFrame(u)):(s.clearRAFTimeout(t),e())};return t.id=requestAnimationFrame(u),t};exports.GlobalModel=s,exports.useClass=(r,t=[])=>e.useMemo((()=>r.filter(Boolean).join(" ")),t),exports.useIsMounted=()=>{const r=e.useRef(!1);return e.useEffect((()=>(r.current=!0,()=>{r.current=!1})),[]),r},exports.useKeyboardEvent=({eventType:r,handler:t})=>{e.useEffect((()=>(document.addEventListener(r,t),()=>document.removeEventListener(r,t))))},exports.useLastDiffValue=(r,t)=>{const n=e.useRef([]);return n.current.unshift(r),n.current.find((e=>t?t({prevValue:e,newValue:r}):e!==r))},exports.useMount=r,exports.useMutationObserver=({callback:r,config:t,target:n})=>{const u=e.useRef(null);e.useEffect((()=>(n.current&&(u.current=new MutationObserver(r),u.current.observe(n.current,t)),()=>{u.current&&u.current.disconnect()})),[r,t,n.current])},exports.useOnOutsideClick=({callback:r,element:t})=>{const n=e.useCallback((e=>{t.current&&(t.current.contains(e.target)||r())}),[r,t.current]);e.useEffect((()=>(document.addEventListener("click",n),()=>document.removeEventListener("click",n))),[n])},exports.usePrevious=r=>{const n=e.useRef(r),u=e.useRef(n.current);return t((()=>{u.current=n.current,n.current=r}),[r]),u.current},exports.useResizeObserver=({callback:r,target:t})=>{const n=e.useRef(null);e.useEffect((()=>(t.current&&(n.current=new ResizeObserver(r),n.current.observe(t.current)),()=>{n.current&&n.current.disconnect()})),[r,t.current])},exports.useUnmount=u,exports.useUpdate=(r,t)=>{e.useEffect((()=>{r()}),t)},exports.useUpdateOnly=t,exports.useUpdatedRef=n,exports.useWindowResize=({callback:t})=>{const n=e.useRef(null);r((()=>{n.current=s.debounceRAF(t,200),window.addEventListener("resize",n.current)})),u((()=>{n.current&&window.removeEventListener("resize",n.current)}))};
